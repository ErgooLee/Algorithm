广度优先搜索框架：
        Queue<Node> queue = new LinkedList<>();//1.第一个节点放入队列
        queue.offer(new Node(0, 0));
        visited[0][0] = 1;
        Node top;
        while (!queue.isEmpty()) {//2.当队列不为空时
            top = queue.poll();
            for (int i = 0; i < 4; i++) {//3.将与之关联的节点试探性放入队列
                Node next = new Node(top.x + xx[i], top.y + yy[i]);
                if (check(next.x, next.y)) {
                    result[next.x][next.y] = i;
                    visited[next.x][next.y] = 1;
                    queue.offer(next);
                }
                if (next.x == 7 && next.y == 7) {//4.
                    System.out.println("done");
                    out();
                    return;
                }
            }
        }
深度优先搜索框架：
        for (int i = 0; i < 4; i++) {
            int nextX = x + xx[i];
            int nextY = y + yy[i];
            if (check(nextX,nextY)){
                visited[x][y] = 1;
                result[nextX][nextY] = i;
                if (nextX == 7 && nextY == 7) {
                    out();
                    return;
                }else{
                    dfs(nextX,nextY);
                }
            }
        }
递归回溯框架：
        while (k >= 0) {
            result[k] = result[k] + 1;
            while (result[k] < 8 && !check(k, result[k])) {
                result[k] = result[k] + 1;
            }
            if (result[k] < 8) {
                    if (k == 7) {
                        out();
                    }else{
                        k = k + 1;
                        result[k] = -1;
                    }
            }else{
                k = k - 1;
            }
        }
265  最大子段和  动态规划+分治算法
251  分治算法 比赛日程表
237  子集树 解决装船问题
235  子集树 解决装船问题
228  Jhunson 方法计算流水线作业问题
225  排列树解决八皇后问题
224  n的全排列  复杂度   n!
223  n 全排列   复杂度   n的n次方
221  回溯法(非递归),解n r组合问题
220  素数环问题  回溯，深度优先。
218  马的遍历问题  深度优先  回溯
212  8皇后问题  深度优先  回溯

206  七巧板染色问题  深度优先
200  深度优先 广度优先解决迷宫问题
198  广度优先  最短路劲问题
180  两个字符串的最长子序列
171  资源分配问题  动态规划
166  动态规划  值最大路径
152  找到第n小的数 分治算法  快速排序
151  找到第二小的数  分治算法
147  大整数乘法
143  分治算法  残缺棋盘问题
109  数组平移问题 最大公约数应用
83   特殊数组打印
79   100！
78   长整型*大整数
77   报数退出问题
66   r选n的组合问题
60   整数划分问题
58   汉诺塔问题
56   特殊数组输出问题
